# Default values for gitdocs.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# Git repo to sync
# ex: https://github.com/kubernetes/website.git
# ex: https://github.com/sourcethemes/academic-kickstart.git
gitSyncRepo: https://github.com/sourcethemes/academic-kickstart.git

volumes: []

gitSync:
  name: git-sync
  image:
    registry: k8s.gcr.io
    repository: git-sync/git-sync
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: v3.2.0
  volumeMounts:
  - name: markdown
    mountPath: /tmp/git
  env:
    gitSyncRepo: https://github.com/sourcethemes/academic-kickstart.git
    gitSyncDest: git-sync
    gitSyncWait: "30"
  securityContext:
    allowPrivilegeEscalation: false
  
hugo:
  name: hugo
  image:
    registry: docker.io
    repository: klakegg/hugo
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: edge-ext-alpine
  volumeMounts:
  - name: markdown
    mountPath: /src
  - name: html
    mountPath: /target
  env:
  - name: HUGO_VERSION
    value: "0.69.0"
  - name: HUGO_DESTINATION
    value: "../../target"
  securityContext:
    allowPrivilegeEscalation: false

nginx:
  name: nginx
  image:
    registry: docker.io
    repository: nginxinc/nginx-unprivileged
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  volumeMounts:
  - name: html
    mountPath: /usr/share/nginx/html
  - name: nginx-conf
    mountPath: /etc/nginx/nginx.conf # mount nginx-conf volume to /etc/nginx
    subPath: nginx.conf
    readOnly: true
  env:
  securityContext:
    allowPrivilegeEscalation: false
  # nginx configmap...
  config:
    # configmap name
    name: "nginx-conf"
    annotations:
    entries:
      nginx.conf: |
        worker_processes  1;
        pid /tmp/nginx.pid;
        error_log  /var/log/nginx/error.log warn;
        events {
          # When you need > 8000 * cpu_cores connections, you start optimizing your OS,
          # and this is probably the point at which you hire people who are smarter than
          # you, as this is *a lot* of requests.
          worker_connections 8000;
        }
        http {
            proxy_temp_path /tmp/proxy_temp;
            client_body_temp_path /tmp/client_temp;
            fastcgi_temp_path /tmp/fastcgi_temp;
            uwsgi_temp_path /tmp/uwsgi_temp;
            scgi_temp_path /tmp/scgi_temp;
        
            include       /etc/nginx/mime.types;
            default_type  application/octet-stream;
    
            log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';
    
            access_log  /var/log/nginx/access.log  main;
    
            sendfile        on;
            #tcp_nopush     on;
    
            keepalive_timeout  65;
    
            #gzip  on;
    
            include /etc/nginx/conf.d/*.conf;
        }
    
imagePullSecrets:

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
    fsGroup: 65534
    runAsUser: 65533
    runAsGroup: 65534

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}